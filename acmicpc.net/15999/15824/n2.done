#include <stdio.h>
#include <stdlib.h>
#define N_MAX 300000
typedef long long ll;
const ll P = 1000000007;
int N;
ll SCORE[N_MAX], POW_2[N_MAX];
ll exp_2_mod(int pow);
static int cmp(const void *a, const void *b);
int main() {
    scanf("%d", &N);
    for (int n = 0; n < N; n++) scanf("%lld", &SCORE[n]);
    qsort(SCORE, N, sizeof(ll), cmp);
    ll sum_score = 0;
    for (int n = 0; n < N; n++) {
        for (int m = n + 1; m < N; m++) {
            int delta = m - n;
            ll pow_2 = exp_2_mod(delta - 1);
            ll score_delta = SCORE[m] - SCORE[n];
            ll score = (pow_2 * score_delta) % P;
            sum_score = (sum_score + score) % P;
        }
    }
    printf("%lld\n", sum_score);
    return 0;
}
ll exp_2_mod(int pow) {
    if (POW_2[pow] != 0) return POW_2[pow];
    ll base = 2;
    ll result = 1;
    int pow_temp = pow;
    while (pow_temp > 0) {
        if (pow_temp % 2 == 1) result = (result * base) % P;
        base = (base * base) % P;
        pow_temp /= 2;
    }
    POW_2[pow] = result;
    return result;
}
static int cmp(const void *a, const void *b) {
    if (*(ll *)a > *(ll *)b) return 1;
    if (*(ll *)a < *(ll *)b) return -1;
    return 0;
}