#include <cstdio>
#include <vector>

// #define _DEBUG

#ifdef _DEBUG
#define DEBUG_PRINTF(...) printf(__VA_ARGS__)
#else
#define DEBUG_PRINTF(x, ...)
#endif

#define MAX_N 1000000

int n;
int a[MAX_N];
int lisLengthAt[MAX_N];
int maxLisLength;
int maxLisLengthIdx;

int main(void)
{
	scanf("%d", &n);
	for (int i = 0; i < n; i++)
		scanf("%d", &a[i]);

	std::vector<int> lisComparators;

	for (int i = 0; i < n; i++)
	{
		if (lisComparators.size() == 0)
		{
			lisComparators.push_back(a[i]);
			lisLengthAt[i] = 1;
			maxLisLength = 1;
			maxLisLengthIdx = i;
		}
		else
		{
			if (a[i] > *(lisComparators.end() - 1))
			{
				lisComparators.push_back(a[i]);
				int newLisLength = lisComparators.size();
				lisLengthAt[i] = newLisLength;
				if (newLisLength > maxLisLength)
				{
					maxLisLength = newLisLength;
					maxLisLengthIdx = i;
				}
			}
			else
			{
				int sameLisLengthIdx = std::lower_bound(lisComparators.begin(), lisComparators.end(), a[i]) - lisComparators.begin();
				int sameLisLength = sameLisLengthIdx + 1;
				lisComparators[sameLisLengthIdx] = a[i];
				lisLengthAt[i] = sameLisLength;
			}
		}
	}

	for (int i = 0; i < n; i++)
		DEBUG_PRINTF("%3d | ", a[i]);
	DEBUG_PRINTF("\n");
	for (int i = 0; i < n; i++)
		DEBUG_PRINTF("%3d | ", lisLengthAt[i]);
	DEBUG_PRINTF("\n");
	for (int i = 0; i < lisComparators.size(); i++)
		DEBUG_PRINTF("%3d | ", lisComparators[i]);
	DEBUG_PRINTF("\n");

	std::vector<int> result;
	result.push_back(a[maxLisLengthIdx]);
	int tailIdx = maxLisLengthIdx;
	for (int i = maxLisLengthIdx - 1; i >= 0; i--)
	{
		if (a[i] < a[tailIdx] && lisLengthAt[i] + 1 == lisLengthAt[tailIdx])
		{
			result.push_back(a[i]);
			tailIdx = i;
		}
	}

	printf("%d\n", maxLisLength);
	for (int i = result.size() - 1; i >= 0; i--)
		printf("%d ", result[i]);
	printf("\n");
	return (0);
}
