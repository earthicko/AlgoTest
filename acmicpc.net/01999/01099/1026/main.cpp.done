#include <algorithm>
#include <iostream>

int cmp(const void *a, const void *b) {
    if (*(int *)a < *(int *)b)
        return 1;
    else if (*(int *)a == *(int *)b)
        return 0;
    else
        return -1;
}

int cmp_inv(const void *a, const void *b) {
    if (*(int *)a > *(int *)b)
        return 1;
    else if (*(int *)a == *(int *)b)
        return 0;
    else
        return -1;
}

int main() {
    int N, A[50], B[50];
    std::cin >> N;
    for (int i = 0; i < N; i++) std::cin >> A[i];
    for (int i = 0; i < N; i++) std::cin >> B[i];

    qsort(A, N, sizeof(int), cmp);
    qsort(B, N, sizeof(int), cmp_inv);

    int sum = 0;
    for (int i = 0; i < N; i++) sum += (A[i] * B[i]);

    std::cout << sum;

    return 0;
}