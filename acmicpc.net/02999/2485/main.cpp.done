#include <algorithm>
#include <cstdio>
#include <iostream>
#include <vector>

// #define _DEBUG
#ifdef _DEBUG
#define PRINTF(...) printf(__VA_ARGS__)
#else
#define PRINTF(...)
#endif

const int maxn = 100000;
int n;
int d[maxn];
int gcd;

int getGCD(int a, int b)
{
    if (a == 1 || b == 1)
        return (1);
    int mod;
    while (b != 0) {
        mod = a % b;
        a = b;
        b = mod;
    }
    return (a);
}

int main(void)
{
    std::cin >> n;
    for (int i = 0; i < n; i++)
        std::cin >> d[i];
    gcd = d[1] - d[0];
    PRINTF("gcd %d\n", gcd);
    for (int i = 1; i < n - 1; i++) {
        PRINTF("diff %d\n", d[i + 1] - d[i]);
        gcd = getGCD(d[i + 1] - d[i], gcd);
        PRINTF("gcd %d\n", gcd);
    }
    int counter = 0;
    for (int i = 0; i < n - 1; i++) {
        int diff = d[i + 1] - d[i];
        int n = (diff / gcd) - 1;
        PRINTF("diff %d n %d\n", diff, n);
        counter += n;
    }
    printf("%d\n", counter);
    return (0);
}
