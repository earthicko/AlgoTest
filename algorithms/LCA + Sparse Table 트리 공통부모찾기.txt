LCA: Lowest Common Ancestor
Sparse Table: 희소 테이블

LCA: 트리에서 가장 가까운 공통 조상
Sparse Table: 한 노드에서 2^0, 2^1, 2^2...번째 조상을 기록하는 표
    -> 어떤 노드의 100101(2)번째 조상을 찾고 싶다면 이 표에서 2^0 -> 2^2 -> 2^5번째 부모로 점프하면 됨 (순서 무관)
트리에서 임의의 두 노드 사이의 거리는:
(a와 LCA의 거리) + (b와 LCA의 거리) = (a와 루트의 거리) + (b와 루트의 거리) - 2 * (LCA와 루트의 거리)


* 준비물 *
P[i][e]: i 노드의 2^e번째 조상의 번호
L[i]: i 노드의 깊이 (루트 노드에서의 거리)



* Sparse Table 구현 *
모든 i에 대해 P[i][0]를 기록한다.
그 다음 1 ~ 최대값의 e에 대하여 P[i][e] = P[ P[i][e-1] ][e-1]이다
 = 2^e번째 부모는 2^(e-1)번째 부모를 2번 거슬러 올라가면 찾을 수 있다
이때 모든 i에 대해 탐색을 완료한 후 e를 증가시켜야 한다. 루프의 순서는 e -> i



* LCA 구현 *
a, b 노드의 LCA를 찾는다

b의 깊이가 더 높도록 필요하다면 두 번호를 맞바꾼다
e의 최고값 ~ 0까지의 e에 대하여, 2^e보다 두 노드의 깊이 차이가 크거나 같다면, b를 2^e만큼 점프한다 (b를 P[b][e]로 이동한다)
-> 초기 깊이 차이가 100101(2)번이었다면, e = 5, 2, 0일 때 점프하게 된다
이제 a와 b의 깊이는 같다

a == b라면 a가 LCA이다
아니라면 둘은 다른 가지에 있다

e의 최고값 ~ 0까지의 e에 대하여:
    a의 2^e번째 조상과 b의 2^e번째 조상이 같다면 무시하고 넘어간다 (과도하게 위로 올라간 것)
    그렇지 않다면 a와 b를 각각 2^e번째 조상으로 점프시킨다
이제 a와 b는 공통의 부모를 둔 같은 레벨이다
a의 1번째 조상이 LCA이다


